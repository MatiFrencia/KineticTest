services:
  inventory.api:
    image: ${DOCKER_REGISTRY-}inventoryapi
    build:
      context: .
      dockerfile: Inventory.API/Dockerfile
    container_name: inventoryapi
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - RABBITMQ_HOST=rabbitmq
      - SQLSERVER_CONNECTIONSTRING=Server=sqlserver;Database=InventoryDB;User=sa;Password=MatiFrencia11;TrustServerCertificate=True;
    depends_on:
      - rabbitmq
      - sqlserver 
    ports:
      - "5000:8080"
    networks:
      - app_network
    entrypoint: ["/bin/bash", "/app/migrate.sh"]

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - app_network

  notification.service:
    image: ${DOCKER_REGISTRY-}notificationservice
    build:
      context: .
      dockerfile: Notification.Service/Dockerfile
    container_name: notificationservice
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - RABBITMQ_HOST=rabbitmq
      - SQLSERVER_CONNECTIONSTRING=Server=sqlserver;Database=NotificationDB;User=sa;Password=MatiFrencia11;
    depends_on:
      - rabbitmq
      - sqlserver
    networks:
      - app_network

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=MatiFrencia11
    ports:
      - "1434:1433"
    networks:
      - app_network
    volumes:
      - sqlserver_data:/var/opt/mssql 

networks:
  app_network:
    driver: bridge

volumes:
  sqlserver_data:
